"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[162],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(r),m=a,f=c["".concat(s,".").concat(m)]||c[m]||d[m]||i;return r?n.createElement(f,o(o({ref:t},u),{},{components:r})):n.createElement(f,o({ref:t},u))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9390:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const i={sidebar_position:2,title:"Getting Started"},o=void 0,l={unversionedId:"getting-started",id:"getting-started",title:"Getting Started",description:"Prerequisites",source:"@site/docs/getting-started.md",sourceDirName:".",slug:"/getting-started",permalink:"/docs/getting-started",draft:!1,editUrl:"https://github.com/emitbase/emitbase-website/tree/main/docs/getting-started.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Getting Started"},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/introduction"},next:{title:"Guides",permalink:"/docs/category/guides"}},s={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Start with Emitbase CLI",id:"start-with-emitbase-cli",level:2},{value:"Step 1: Installation",id:"step-1-installation",level:3},{value:"Step 2: Create a new project",id:"step-2-create-a-new-project",level:3},{value:"Setup your Emitbase project",id:"setup-your-emitbase-project",level:2},{value:"Step 1: Set up your profiles.yml",id:"step-1-set-up-your-profilesyml",level:3},{value:"Step 2: Set up your first threshold",id:"step-2-set-up-your-first-threshold",level:3},{value:"Step 3: Set up your first notifications",id:"step-3-set-up-your-first-notifications",level:3},{value:"Step 4: Build docker image",id:"step-4-build-docker-image",level:3},{value:"Step 5: Run docker image \ud83d\ude80",id:"step-5-run-docker-image-",level:3}],u={toc:p},c="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://nodejs.org/en/blog/release/v18.12.0"},"Node.js 18.12")," or later."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.docker.com/"},"Docker")," on your machine."),(0,a.kt)("li",{parentName:"ul"},"Read about ",(0,a.kt)("a",{parentName:"li",href:"/docs/introduction#how-does-it-work"},"how Emitbase works"),"; it will make the following tutorial much easier for you! \ud83d\udc69\u200d\ud83c\udfeb")),(0,a.kt)("h2",{id:"start-with-emitbase-cli"},"Start with Emitbase CLI"),(0,a.kt)("h3",{id:"step-1-installation"},"Step 1: Installation"),(0,a.kt)("p",null,"If you use ",(0,a.kt)("inlineCode",{parentName:"p"},"npm"),", run the following command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ npm install -g @emitbase/emitbase-cli\n")),(0,a.kt)("p",null,"If you use ",(0,a.kt)("inlineCode",{parentName:"p"},"yarn"),", run the following command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ yarn add global @emitbase/emitbase-cli\n")),(0,a.kt)("h3",{id:"step-2-create-a-new-project"},"Step 2: Create a new project"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ npx emitbase init <your-project-name>\n")),(0,a.kt)("h2",{id:"setup-your-emitbase-project"},"Setup your Emitbase project"),(0,a.kt)("h3",{id:"step-1-set-up-your-profilesyml"},"Step 1: Set up your profiles.yml"),(0,a.kt)("p",null,"First, create a credentials file (don't worry, it's in ",(0,a.kt)("inlineCode",{parentName:"p"},".gitignore")," \ud83d\udc4c)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ touch profiles.yml\n")),(0,a.kt)("p",null,"In the ",(0,a.kt)("inlineCode",{parentName:"p"},"profiles.yml")," file, please define your credentials:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"emitbase:\n  databases:\n    dev:\n      host: <database-host>\n      database: <database-name>\n      port: <database-port>\n      user: <database-username>\n      password: <database-password>\n\n  notifications:\n    dev:\n      email:\n        host: <email-host>\n        port: <email-port>\n        user: <email-user>\n        password: <email-password>\n      slack:\n        port: <slack-port>\n        channel: <slack-channel>\n        signingSecret: <slack-signing-secret>\n        token: <slack-token>\n\n  target: dev\n")),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"You do not need to define notifications. The messages will be printed to the console. You might find it useful during testing.")),(0,a.kt)("h3",{id:"step-2-set-up-your-first-threshold"},"Step 2: Set up your first threshold"),(0,a.kt)("p",null,"Go to the ",(0,a.kt)("inlineCode",{parentName:"p"},"thresholds")," folder where you will find ",(0,a.kt)("inlineCode",{parentName:"p"},"first_threshold.yml"),". Here, you can define your first threshold. For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"first_threshold:\n  expression: 'select * from metrics where temp > 30'\n  cron: '*/5 * * * *'\n")),(0,a.kt)("p",null,"The above declaration will cause the SQL query to run in the defined database every 5 minutes. If the query returns any rows, you will receive messages on your channels (see the next step)."),(0,a.kt)("h3",{id:"step-3-set-up-your-first-notifications"},"Step 3: Set up your first notifications"),(0,a.kt)("p",null,"Go to the ",(0,a.kt)("inlineCode",{parentName:"p"},"notifications")," folder where you will find ",(0,a.kt)("inlineCode",{parentName:"p"},"first_notification.yml"),". Here, you can define your first notification. For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"first_threshold:\n  email:\n    from: 'from@company.io'\n    reciever: 'to@company.io'\n    message: 'Hello mate! \ud83d\udc4b The temperature is too high! Please help! \ud83d\udd25'\n  slack:\n    message: 'Hello mate! \ud83d\udc4b The temperature is too high! Please help! \ud83d\udd25'\n")),(0,a.kt)("h3",{id:"step-4-build-docker-image"},"Step 4: Build docker image"),(0,a.kt)("p",null,"To run the project, you will need to build a Docker image:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ docker build -t emitbase .\n")),(0,a.kt)("h3",{id:"step-5-run-docker-image-"},"Step 5: Run docker image \ud83d\ude80"),(0,a.kt)("p",null,"Now, you can run it! "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"$ docker run -it emitbase\n")))}d.isMDXComponent=!0}}]);